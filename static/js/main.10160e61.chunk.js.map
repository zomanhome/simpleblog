{"version":3,"sources":["actions/index.js","reducers/posts.js","reducers/index.js","components/post_new.js","components/post.js","components/posts_all.js","index.js"],"names":["GET_POSTS","GET_POST","DELETE_POST","CREATE_POST","CREATE_COMMENT","ROOT_URL","rootReducer","combineReducers","posts","state","arguments","length","undefined","action","type","_","mapKeys","payload","data","Object","objectSpread","defineProperty","id","omit","form","formReducer","PostsNew","field","_field$meta","meta","touched","error","className","concat","react_default","a","createElement","label","assign","input","values","_this","this","props","createPost","history","push","handleSubmit","onSubmit","bind","Field","name","component","renderField","Link","to","Component","reduxForm","validate","errors","title","connect","callback","request","axios","post","then","Post","match","params","getPost","deletePost","_this2","createComment","postId","body","onClick","onDeleteClick","href","target","rel","addComment","_ref","ownProps","get","delete","PostsAll","getPosts","map","key","renderPosts","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","promise","ReactDOM","render","es","BrowserRouter","Switch","Route","path","PostNew","document","querySelector"],"mappings":"mUAEaA,EAAY,YACZC,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAiB,iBAExBC,EAAW,mCCLF,ICOAC,EALKC,0BAAgB,CAClCC,MDHa,WAA6B,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOC,MACb,KAAKd,EACH,OAAOe,IAAEC,QAAQH,EAAOI,QAAQC,KAAM,MACxC,KAAKjB,EACH,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GAAKV,EAAZU,OAAAE,EAAA,EAAAF,CAAA,GAAoBN,EAAOI,QAAQC,KAAKI,GAAKT,EAAOI,QAAQC,OAC9D,KAAKhB,EACH,OAAOa,IAAEQ,KAAKd,EAAOI,EAAOI,SAC9B,QACE,OAAOR,ICLXe,KAAMC,yECDFC,sLACQC,GAAO,IAAAC,EAGbD,EADFE,KAAQC,EAFOF,EAEPE,QAASC,EAFFH,EAEEG,MAGbC,EAAS,cAAAC,OAAiBH,GAAWC,EAAQ,aAAe,IAElE,OACEG,EAAAC,EAAAC,cAAA,OAAKJ,UAAWA,GACdE,EAAAC,EAAAC,cAAA,aAAQT,EAAMU,MAAd,KACAH,EAAAC,EAAAC,cAACT,EAAMb,KAAPK,OAAAmB,OAAA,CAAYN,UAAU,eAAelB,KAAK,QAAWa,EAAMY,QAC3DL,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,aAAaF,EAAUC,EAAQ,sCAK3CS,GAAQ,IAAAC,EAAAC,KACfA,KAAKC,MAAMC,WAAWJ,EAAQ,WAC5BC,EAAKE,MAAME,QAAQC,KAAK,wCAInB,IACCC,EAAiBL,KAAKC,MAAtBI,aAER,OACEb,EAAAC,EAAAC,cAAA,QAAMY,SAAUD,EAAaL,KAAKM,SAASC,KAAKP,QAC9CR,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEb,MAAM,QACNc,KAAK,QACLrC,KAAK,QACLsC,UAAWV,KAAKW,cAElBnB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEb,MAAM,UACNc,KAAK,OACLrC,KAAK,WACLsC,UAAWV,KAAKW,cAElBnB,EAAAC,EAAAC,cAAA,UAAQtB,KAAK,SAASkB,UAAU,mBAAhC,UAGAE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMtB,UAAU,iBAAiBuB,GAAG,KAApC,kBA3CeC,aA4DRC,kBAAU,CACvBC,SAVF,SAAkBlB,GAChB,IAAMmB,EAAS,GAKf,QAHKnB,EAAOoB,OAASpB,EAAOoB,MAAMjD,OAAS,KACzCgD,EAAOC,MAAQ,+CAEVD,GAKPnC,KAAM,gBAFOiC,CAIbI,YACE,KACA,CAAEjB,WHhCC,SAAoBJ,EAAQsB,GACjC,IAAMC,EAAUC,IACbC,KADa,GAAAhC,OACL5B,EADK,UACamC,GAC1B0B,KAAK,kBAAMJ,MACd,MAAO,CACLhD,KAAMX,EACNc,QAAS8C,KGwBXF,CAGEnC,ICpEEyC,8LACgB,IACV7C,EAAOoB,KAAKC,MAAMyB,MAAMC,OAAxB/C,GACRoB,KAAKC,MAAM2B,QAAQhD,2CAEL,IAAAmB,EAAAC,KACNpB,EAAOoB,KAAKC,MAAMyB,MAAMC,OAAxB/C,GACRoB,KAAKC,MAAM4B,WAAWjD,EAAI,WACxBmB,EAAKE,MAAME,QAAQC,KAAK,4CAGf,IAAA0B,EAAA9B,KACHpB,EAAOoB,KAAKC,MAAMyB,MAAMC,OAAxB/C,GACRoB,KAAKC,MAAM8B,cACT,CACEC,OAAQpD,EACRqD,KAAM,gBAER,WACEH,EAAK7B,MAAME,QAAQC,KAAnB,UAAAb,OAAkCX,uCAI/B,IACC2C,EAASvB,KAAKC,MAAdsB,KAER,OAAKA,EAKH/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAG,KAAT,qBACArB,EAAAC,EAAAC,cAAA,UACEJ,UAAU,+BACV4C,QAASlC,KAAKmC,cAAc5B,KAAKP,OAFnC,eAMAR,EAAAC,EAAAC,cAAA,UAAK6B,EAAKL,OACV1B,EAAAC,EAAAC,cAAA,SAAI6B,EAAKU,MACTzC,EAAAC,EAAAC,cAAA,0KAG+B,IAC7BF,EAAAC,EAAAC,cAAA,KACE0C,KAAK,4CACLC,OAAO,SACPC,IAAI,uBAHN,QAJF,KAaA9C,EAAAC,EAAAC,cAAA,UACEJ,UAAU,kCACV4C,QAASlC,KAAKuC,WAAWhC,KAAKP,OAFhC,uBA3BKR,EAAAC,EAAAC,cAAA,gCA3BMoB,aAqEJK,kBAJf,SAAAqB,EAAoCC,GAClC,MAAO,CAAElB,KADmCiB,EAAnB1E,MACJ2E,EAASf,MAAMC,OAAO/C,MAK3C,CAAEgD,QJ3DG,SAAiBhD,GACtB,IAAMyC,EAAUC,IAAMoB,IAAN,GAAAnD,OAAa5B,EAAb,WAAA4B,OAA+BX,EAA/B,qBAChB,MAAO,CACLR,KAAMb,EACNgB,QAAS8C,IIuDAQ,WJ7CN,SAAoBjD,EAAIwC,GAI7B,OAHgBE,IACbqB,OADa,GAAApD,OACH5B,EADG,WAAA4B,OACeX,IAC5B4C,KAAK,kBAAMJ,MACP,CACLhD,KAAMZ,EACNe,QAASK,IIuCYmD,cJ3BlB,SAAuBjC,EAAQsB,GACpC,IAAMC,EAAUC,IACbC,KADa,GAAAhC,OACL5B,EADK,aACgBmC,GAC7B0B,KAAK,kBAAMJ,MACd,MAAO,CACLhD,KAAMV,EACNa,QAAS8C,KImBEF,CAGbM,GCvEImB,8LAEF5C,KAAKC,MAAM4C,iDAGX,OAAOxE,IAAEyE,IAAI9C,KAAKC,MAAMnC,MAAO,SAAAyD,GAC7B,OACE/B,EAAAC,EAAAC,cAAA,MAAIJ,UAAU,kBAAkByD,IAAKxB,EAAK3C,IACxCY,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAE,UAAAtB,OAAYgC,EAAK3C,KAAO2C,EAAKL,2CAM3C,OACE1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBACbE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMtB,UAAU,kBAAkBuB,GAAG,cAArC,eAIFrB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,MAAIJ,UAAU,cAAcU,KAAKgD,uBAtBlBlC,aAgCRK,kBAJf,SAAyBpD,GACvB,MAAO,CAAED,MAAOC,EAAMD,QAKtB,CAAE+E,SL9BG,WACL,IAAMxB,EAAUC,IAAMoB,IAAN,GAAAnD,OAAa5B,EAAb,WAChB,MAAO,CACLS,KAAMd,EACNiB,QAAS8C,KKwBEF,CAGbyB,GC1BIK,UAAmBC,8BAAoB,KACvCC,EAAQC,sBACZxF,EACAqF,EAAiBI,0BAAgBC,OAGnCC,IAASC,OACPhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAUN,MAAOA,GACf3D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACElE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,KAAK,aAAanD,UAAWoD,IACpCtE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,KAAK,aAAanD,UAAWe,IACpCjC,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,KAAK,IAAInD,UAAWkC,OAIjCmB,SAASC,cAAc","file":"static/js/main.10160e61.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_POSTS = \"get_posts\";\r\nexport const GET_POST = \"get_post\";\r\nexport const DELETE_POST = \"delete_post\";\r\nexport const CREATE_POST = \"create_post\";\r\nexport const CREATE_COMMENT = \"create_comment\";\r\n\r\nconst ROOT_URL = \"https://simple-blog-api.crew.red\";\r\n\r\nexport function getPosts() {\r\n  const request = axios.get(`${ROOT_URL}/posts`);\r\n  return {\r\n    type: GET_POSTS,\r\n    payload: request\r\n  };\r\n}\r\nexport function getPost(id) {\r\n  const request = axios.get(`${ROOT_URL}/posts/${id}?_embed=comments`);\r\n  return {\r\n    type: GET_POST,\r\n    payload: request\r\n  };\r\n}\r\nexport function getComments() {\r\n  const request = axios.get(`${ROOT_URL}/comments`);\r\n  return {\r\n    type: GET_POSTS,\r\n    payload: request\r\n  };\r\n}\r\nexport function deletePost(id, callback) {\r\n  const request = axios\r\n    .delete(`${ROOT_URL}/posts/${id}`)\r\n    .then(() => callback());\r\n  return {\r\n    type: DELETE_POST,\r\n    payload: id\r\n  };\r\n}\r\nexport function createPost(values, callback) {\r\n  const request = axios\r\n    .post(`${ROOT_URL}/posts`, values)\r\n    .then(() => callback());\r\n  return {\r\n    type: CREATE_POST,\r\n    payload: request\r\n  };\r\n}\r\nexport function createComment(values, callback) {\r\n  const request = axios\r\n    .post(`${ROOT_URL}/comments`, values)\r\n    .then(() => callback());\r\n  return {\r\n    type: CREATE_COMMENT,\r\n    payload: request\r\n  };\r\n}\r\n","import _ from \"lodash\";\r\nimport { GET_POSTS, GET_POST, DELETE_POST } from \"../actions\";\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      return _.mapKeys(action.payload.data, \"id\");\r\n    case GET_POST:\r\n      return { ...state, [action.payload.data.id]: action.payload.data };\r\n    case DELETE_POST:\r\n      return _.omit(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nimport posts from \"./posts\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: posts,\r\n  form: formReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createPost } from \"../actions\";\r\n\r\nclass PostsNew extends Component {\r\n  renderField(field) {\r\n    const {\r\n      meta: { touched, error }\r\n    } = field;\r\n\r\n    const className = `form-group ${touched && error ? \"has-danger\" : \"\"}`;\r\n\r\n    return (\r\n      <div className={className}>\r\n        <label>{field.label}:</label>\r\n        <field.type className=\"form-control\" type=\"text\" {...field.input} />\r\n        <div className=\"text-help\">{touched ? error : \"\"}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSubmit(values) {\r\n    this.props.createPost(values, () => {\r\n      this.props.history.push(\"/\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n        <Field\r\n          label=\"Title\"\r\n          name=\"title\"\r\n          type=\"input\"\r\n          component={this.renderField}\r\n        />\r\n        <Field\r\n          label=\"Content\"\r\n          name=\"body\"\r\n          type=\"textarea\"\r\n          component={this.renderField}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <Link className=\"btn btn-danger\" to=\"/\">\r\n          Cancel\r\n        </Link>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction validate(values) {\r\n  const errors = {};\r\n\r\n  if (!values.title || values.title.length < 3) {\r\n    errors.title = \"Enter a title that is at leat 3 characters!\";\r\n  }\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  validate,\r\n  form: \"PostsNewForm\"\r\n})(\r\n  connect(\r\n    null,\r\n    { createPost }\r\n  )(PostsNew)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPost, deletePost, createComment } from \"../actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Post extends Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getPost(id);\r\n  }\r\n  onDeleteClick() {\r\n    const { id } = this.props.match.params;\r\n    this.props.deletePost(id, () => {\r\n      this.props.history.push(\"/\");\r\n    });\r\n  }\r\n  addComment() {\r\n    const { id } = this.props.match.params;\r\n    this.props.createComment(\r\n      {\r\n        postId: id,\r\n        body: \"Test comment\"\r\n      },\r\n      () => {\r\n        this.props.history.push(`/posts/${id}`);\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    const { post } = this.props;\r\n\r\n    if (!post) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Link to=\"/\">Back to All Posts</Link>\r\n        <button\r\n          className=\"btn btn-danger pull-xs-right\"\r\n          onClick={this.onDeleteClick.bind(this)}\r\n        >\r\n          Delete Post\r\n        </button>\r\n        <h3>{post.title}</h3>\r\n        <p>{post.body}</p>\r\n        <i>\r\n          No comments here because API don't work correctly (comments in\r\n          \"/posts/xx?_embed=comments\" is always empty). You can add a Test\r\n          comment and see it's working{\" \"}\r\n          <a\r\n            href=\"https://simple-blog-api.crew.red/comments\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            here\r\n          </a>\r\n          .\r\n        </i>\r\n        <button\r\n          className=\"btn btn-secondary pull-xs-right\"\r\n          onClick={this.addComment.bind(this)}\r\n        >\r\n          Add a Test comment\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ posts }, ownProps) {\r\n  return { post: posts[ownProps.match.params.id] };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPost, deletePost, createComment }\r\n)(Post);\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPosts } from \"../actions\";\r\n\r\nclass PostsAll extends Component {\r\n  componentDidMount() {\r\n    this.props.getPosts();\r\n  }\r\n  renderPosts() {\r\n    return _.map(this.props.posts, post => {\r\n      return (\r\n        <li className=\"list-group-item\" key={post.id}>\r\n          <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"text-xs-right\">\r\n          <Link className=\"btn btn-primary\" to=\"/posts/new\">\r\n            Add a Post\r\n          </Link>\r\n        </div>\r\n        <h3>All Posts</h3>\r\n        <ul className=\"list-group\">{this.renderPosts()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { posts: state.posts };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPosts }\r\n)(PostsAll);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport promise from \"redux-promise\";\nimport rootReducer from \"./reducers\";\n\nimport PostNew from \"./components/post_new\";\nimport Post from \"./components/post\";\nimport PostsAll from \"./components/posts_all\";\nimport \"./index.css\";\n\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(promise))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/posts/new\" component={PostNew} />\n        <Route path=\"/posts/:id\" component={Post} />\n        <Route path=\"/\" component={PostsAll} />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector(\".container\")\n);\n"],"sourceRoot":""}